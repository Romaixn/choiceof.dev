name: Test and Build

on:
  workflow_call:
    inputs:
      flow:
        required: true
        type: string
      branch:
        required: true
        type: string
      configuration:
        required: true
        type: string

# Define a concurrency group at the branch level for the current workflows.
# Trigerred workflow will be queued and cancel the previous ones.
concurrency:
  group: pr-${{ github.ref }}
  cancel-in-progress: true

env:
  NX_BRANCH: ${{ github.head_ref }}
  NX_CLOUD_DISTRIBUTED_EXECUTION: false

jobs:
  install-deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        id: cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-${{ hashFiles('yarn.lock') }}
      - name: Setup Node
        uses: actions/setup-node@v1
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          node-version: 16
      - name: yarn install
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn

  nx:
    name: Nx Commands
    runs-on: ubuntu-latest
    needs: [install-deps]
    strategy:
      fail-fast: false
      matrix:
        target: [test, build]
    steps:
      - name: Checkout [${{ inputs.branch }}]
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: szenius/set-timezone@v1.0
        name: Change timezone
        with:
          timezoneLinux: 'Europe/Paris'
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: cache-node-${{ hashFiles('yarn.lock') }}
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
        with:
          main-branch-name: ${{ inputs.branch }}
      - uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Nx Affected
        run: yarn nx affected --target=${{ matrix.target }} --parallel --max-parallel=3 --configuration=${{ inputs.configuration }}
      - name: Resize images in lib above 800 width and 800 height
        if: matrix.target == 'build'
        id: resize-images
        uses: petems/image-resizer-gh-action@master
        with:
          target: libs/shared/assets/src/lib/img/ # directory to look for images in
          dimensions: 800x800 # parameter to change size, passed to mogrify as ``
          widthLimit: 800 # max width to check
          heightLimit: 800 # max height to check
      - name: Commit changes
        if: matrix.target == 'build'
        uses: EndBug/add-and-commit@v4
        with:
          add: 'libs/shared/assets/src/lib/img/'
          author_name: "github-actions[bot]"
          author_email: "github-actions@users.noreply.github.com"
          message: |
            Images Resized by Github action\n
            ```
            ${{steps.resize-images.outputs.images_changed}}
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: mshick/add-pr-comment@v1
        if: matrix.target == 'build'
        with:
          message: |
            **Hello, I resized images for you!**:
            ${{steps.csv-table-output.outputs.images_changed}}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          repo-token-user-login: 'github-actions[bot]' # The user.login for temporary GitHub tokens
          allow-repeats: true
      - name: Next export
        if: matrix.target == 'build'
        run: yarn nx run devchoices-next:export
      - uses: actions/upload-artifact@master
        if: matrix.target == 'build'
        with:
          name: dist
          path: dist
